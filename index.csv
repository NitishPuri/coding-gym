name,path,url,tags
1-bit-and-2-bit-characters,leetcode\array\1-bit-and-2-bit-characters.cpp,https://leetcode.com/problems/1-bit-and-2-bit-characters/,easy;leetcode;array
build-array-from-permutation,leetcode\array\build-array-from-permutation.cpp,https://leetcode.com/problems/build-array-from-permutation/,easy;aray;simulation;leetcode;array
check-if-word-can-be-placed-in-crossword,leetcode\array\check-if-word-can-be-placed-in-crossword.cpp,https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword/,matrix;enumeration;medium;leetcode;array
create-target-array-in-the-given-order,leetcode\array\create-target-array-in-the-given-order.cpp,https://leetcode.com/problems/create-target-array-in-the-given-order/,simulation;easy;array;leetcode;array
decompress-run-length-encoded-list,leetcode\array\decompress-run-length-encoded-list.cpp,https://leetcode.com/problems/decompress-run-length-encoded-list/,easy;array;leetcode;array
defuse-the-bomb,leetcode\array\defuse-the-bomb.cpp,https://leetcode.com/problems/defuse-the-bomb/,easy;array;leetcode;array
exam-room,leetcode\array\exam-room.cpp,https://leetcode.com/problems/exam-room/,design;ordered-set;medium;array;leetcode;array
fair-candy-swap,leetcode\array\fair-candy-swap.cpp,https://leetcode.com/problems/fair-candy-swap/,hash-table;binary-search;sorting;easy;array;leetcode;array
find-kth-largest-xor-coordinate-value,leetcode\array\find-kth-largest-xor-coordinate-value.cpp,https://leetcode.com/problems/find-kth-largest-xor-coordinate-value/,medium;array;divide-and-conquer;bit-manipulation;priority-queue;matrix;prefix-sum;quickselect;leetcode;array
find-target-indices-after-sorting-array,leetcode\array\find-target-indices-after-sorting-array.cpp,https://leetcode.com/problems/find-target-indices-after-sorting-array/,easy;binary-search;sorting;array;leetcode;array
game-of-life,leetcode\array\game-of-life.cpp,https://leetcode.com/problems/game-of-life/,medium;matrix;simulation;array;leetcode;array
grid-game,leetcode\array\grid-game.cpp,https://leetcode.com/problems/grid-game/,medium;matrix;prefix-sum;array;leetcode;array
image-smoother,leetcode\array\image-smoother.cpp,https://leetcode.com/problems/image-smoother/,easy;matrix;array;leetcode;array
jump-game-v,leetcode\array\jump-game-v.cpp,https://leetcode.com/problems/jump-game-v/,hard;dynamic-programming;sorting;array;leetcode;array
maximum-element-after-decreasing-and-rearranging,leetcode\array\maximum-element-after-decreasing-and-rearranging.cpp,https://leetcode.com/problems/maximum-element-after-decreasing-and-rearranging/,medium;greedy;sorting;array;leetcode;array
minimum-adjacent-swaps-for-k-consecutive-ones,leetcode\array\minimum-adjacent-swaps-for-k-consecutive-ones.cpp,https://leetcode.com/problems/minimum-adjacent-swaps-for-k-consecutive-ones/,hard;greedy;sliding-window;prefix-sum;array;leetcode;array
minimum-sum-of-squared-difference,leetcode\array\minimum-sum-of-squared-difference.cpp,https://leetcode.com/problems/minimum-sum-of-squared-difference/,medium;math;sorting;priority-queue;array;leetcode;array
number-of-students-unable-to-eat-lunch,leetcode\array\number-of-students-unable-to-eat-lunch.cpp,https://leetcode.com/problems/number-of-students-unable-to-eat-lunch/,easy;stack;queue;simulation;array;leetcode;array
pairs-of-songs-with-total-durations-divisible-by-60,leetcode\array\pairs-of-songs-with-total-durations-divisible-by-60.cpp,https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60/,medium;array;hash-table;counting;leetcode;array
removing-minimum-number-of-magic-beans,leetcode\array\removing-minimum-number-of-magic-beans.cpp,https://leetcode.com/problems/removing-minimum-number-of-magic-beans/,medium;sorting;prefix-sum;array;leetcode;array
rotting-oranges,leetcode\array\rotting-oranges.cpp,https://leetcode.com/problems/rotting-oranges/,medium;breadth-first-search;matrix;array;leetcode;array
shuffle-an-array,leetcode\array\shuffle-an-array.cpp,https://leetcode.com/problems/shuffle-an-array/,medium;math;randomized;array;leetcode;array
snapshot-array,leetcode\array\snapshot-array.cpp,https://leetcode.com/problems/snapshot-array,medium;array;hash-table;binary-search;design;leetcode;array
counting-bits,leetcode\bit-manipulation\counting-bits.cpp,https://leetcode.com/problems/counting-bits/,easy;dynamic-programming;leetcode;bit-manipulation
hamming-distance,leetcode\bit-manipulation\hamming-distance.cpp,https://leetcode.com/problems/hamming-distance/,easy;bit-manipulation;leetcode;bit-manipulation
sum-of-two-integers,leetcode\bit-manipulation\sum-of-two-integers.cpp,https://leetcode.com/problems/sum-of-two-integers/,medium;math;bit-manipulation;leetcode;bit-manipulation
building-h2o,leetcode\concurrency\building-h2o.cpp,https://leetcode.com/problems/building-h2o/,medium;concurrency;leetcode;concurrency
burst-balloons,leetcode\dynamic-programming\burst-balloons.cpp,https://leetcode.com/problems/burst-balloons/,hard;array;dynamic-programming;leetcode;dynamic-programming
check-if-an-original-string-exists-given-two-encoded-strings,leetcode\dynamic-programming\check-if-an-original-string-exists-given-two-encoded-strings.cpp,https://leetcode.com/problems/check-if-an-original-string-exists-given-two-encoded-strings/,dynamic-programming;hard;string;leetcode;dynamic-programming
combination-sum-iii,leetcode\dynamic-programming\combination-sum-iii.cpp,https://leetcode.com/problems/combination-sum-iii/,dynamic-programming;medium;array;backtracking;leetcode;dynamic-programming
longest-subarray-of-1s-after-deleting-one-element,leetcode\dynamic-programming\longest-subarray-of-1s-after-deleting-one-element.cpp,https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/,medium;dynamic-programming;array;sliding-window;leetcode;dynamic-programming
maximum-non-negative-product-in-a-matrix,leetcode\dynamic-programming\maximum-non-negative-product-in-a-matrix.cpp,https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix/,medium;array;dynamic-programming;matrix;leetcode;dynamic-programming
minimum-ascii-delete-sum-for-two-strings,leetcode\dynamic-programming\minimum-ascii-delete-sum-for-two-strings.cpp,https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/,medium;string;dynamic-programming;leetcode;dynamic-programming
minimum-cost-tree-from-leaf-values,leetcode\dynamic-programming\minimum-cost-tree-from-leaf-values.cpp,https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/,medium;dynamic-programming;stack;greedy;monotonic-stack;leetcode;dynamic-programming
minimum-falling-path-sum,leetcode\dynamic-programming\minimum-falling-path-sum.cpp,https://leetcode.com/problems/minimum-falling-path-sum/,medium;array;dynamic-programming;matrix;leetcode;dynamic-programming
number-of-digit-one,leetcode\dynamic-programming\number-of-digit-one.cpp,https://leetcode.com/problems/number-of-digit-one/,hard;math;dynamic-programming;recursion;leetcode;dynamic-programming
number-of-people-aware-of-a-secret,leetcode\dynamic-programming\number-of-people-aware-of-a-secret.cpp,https://leetcode.com/problems/number-of-people-aware-of-a-secret/,medium;dynamic-programming;queue;simulation;leetcode;dynamic-programming
optimal-division,leetcode\dynamic-programming\optimal-division.cpp,https://leetcode.com/problems/optimal-division/,medium;array;math;dynamic-programming;leetcode;dynamic-programming
pyramid-transition-matrix,leetcode\dynamic-programming\pyramid-transition-matrix.cpp,https://leetcode.com/problems/pyramid-transition-matrix/,medium;bit-manipulation;dynamic-programming;depth-first-search;breadth-first-search;leetcode;dynamic-programming
shopping-offers,leetcode\dynamic-programming\shopping-offers.cpp,https://leetcode.com/problems/shopping-offers/,medium;array;dynamic-programming;backtracking;bit-manipulation;memoization;bitmask;leetcode;dynamic-programming
unique-paths-ii,leetcode\dynamic-programming\unique-paths-ii.cpp,https://leetcode.com/problems/unique-paths-ii/,medium;array;dynamic-programming;matrix;leetcode;dynamic-programming
unique-paths,leetcode\dynamic-programming\unique-paths.cpp,https://leetcode.com/problems/unique-paths/,medium;math;dynamic-programming;combinatorics;leetcode;dynamic-programming
minimum-time-visiting-all-points,leetcode\geometry\minimum-time-visiting-all-points.cpp,https://leetcode.com/problems/minimum-time-visiting-all-points/,easy;array;math;geometry;leetcode;geometry
127_word_ladder,leetcode\graph\127_word_ladder.cpp,https://leetcode.com/problems/word-ladder/,hard;hash table;string;breadth-first-search;leetcode;graph
239_keys_and_rooms,leetcode\graph\239_keys_and_rooms.cpp,https://leetcode.com/problems/keys-and-rooms/,medium;depth-first-search;breadth-first-search;graph;leetcode;graph
find-largest-value-in-each-tree-row,leetcode\graph\find-largest-value-in-each-tree-row.cpp,https://leetcode.com/problems/find-largest-value-in-each-tree-row/,medium;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;graph
minimize-malware-spread,leetcode\graph\minimize-malware-spread.cpp,https://leetcode.com/problems/minimize-malware-spread/,hard;depth-first-search;breadth-first-search;union-find;matrix;graph;leetcode;graph
path-with-maximum-probability,leetcode\graph\path-with-maximum-probability.cpp,https://leetcode.com/problems/path-with-maximum-probability/,medium;graph;priority-queue;shortest-path;graph;leetcode;graph
array-of-doubled-pairs,leetcode\greedy\array-of-doubled-pairs.cpp,https://leetcode.com/problems/array-of-doubled-pairs/,medium;array;hash-table;greedy;sorting;leetcode;greedy
least-number-of-unique-integers-after-k-removals,leetcode\greedy\least-number-of-unique-integers-after-k-removals.cpp,https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals/,medium;array;hash-table;greedy;sorting;counting;leetcode;greedy
minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits,leetcode\greedy\minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits.cpp,https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits/,hard;string;greedy;binary-indexed-tree;segment-tree;leetcode;greedy
flatten-a-multilevel-doubly-linked-list,leetcode\linked_list\flatten-a-multilevel-doubly-linked-list.cpp,https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/,medium;linked-list;depth-first-search;doubly-linked-list;leetcode;linked_list
closest-divisors,leetcode\math\closest-divisors.cpp,https://leetcode.com/problems/closest-divisors/,medium;math;leetcode;math
find-three-consecutive-integers-that-sum-to-a-given-number,leetcode\math\find-three-consecutive-integers-that-sum-to-a-given-number.cpp,https://leetcode.com/problems/find-three-consecutive-integers-that-sum-to-a-given-number/,medium;math;simulation;leetcode;math
four-divisors,leetcode\math\four-divisors.cpp,https://leetcode.com/problems/four-divisors/,medium;array;math;leetcode;math
minimum-deletions-to-make-array-divisible,leetcode\math\minimum-deletions-to-make-array-divisible.cpp,https://leetcode.com/problems/minimum-deletions-to-make-array-divisible/,hard;array;math;sorting;priority-queue;number-theory;leetcode;math
powx-n,leetcode\math\powx-n.cpp,https://leetcode.com/problems/powx-n/,medium;math;recursion;leetcode;math
self-dividing-numbers,leetcode\math\self-dividing-numbers.cpp,https://leetcode.com/problems/self-dividing-numbers/,easy;math;leetcode;math
sqrtx,leetcode\math\sqrtx.cpp,https://leetcode.com/problems/sqrtx/,easy;math;binary-search;leetcode;math
sum-of-digits-in-base-k,leetcode\math\sum-of-digits-in-base-k.cpp,https://leetcode.com/problems/sum-of-digits-in-base-k/,easy;math;leetcode;math
super-pow,leetcode\math\super-pow.cpp,https://leetcode.com/problems/super-pow/,medium;math;divide-and-conquer;leetcode;math
the-kth-factor-of-n,leetcode\math\the-kth-factor-of-n.cpp,https://leetcode.com/problems/the-kth-factor-of-n/,medium;math;leetcode;math
capacity-to-ship-packages-within-d-days,leetcode\search\capacity-to-ship-packages-within-d-days.cpp,https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/,medium;array;binary-search;leetcode;search
guess-number-higher-or-lower,leetcode\search\guess-number-higher-or-lower.cpp,https://leetcode.com/problems/guess-number-higher-or-lower/,easy;binary-search;interactive;leetcode;search
tuple-with-same-product,leetcode\search\tuple-with-same-product.cpp,https://leetcode.com/problems/tuple-with-same-product/,medium;array;hash-table;leetcode;search
200_hashmap,leetcode\set\200_hashmap.cpp,https://leetcode.com/problems/design-hashmap/,easy;array;hash-table;linked-list;design;hash-function;leetcode;set
200_hashset,leetcode\set\200_hashset.cpp,https://leetcode.com/problems/design-hashset/,easy;array;hash-table;linked-list;design;hash-function;leetcode;set
avoid-flood-in-the-city,leetcode\set\avoid-flood-in-the-city.cpp,https://leetcode.com/problems/avoid-flood-in-the-city/,medium;array;hash-table;binary-search;greedy;priority-queue;leetcode;set
most-frequent-number-following-key-in-an-array,leetcode\set\most-frequent-number-following-key-in-an-array.cpp,https://leetcode.com/problems/most-frequent-number-following-key-in-an-array/,easy;array;hash-table;counting;leetcode;set
my-calendar-iii,leetcode\set\my-calendar-iii.cpp,https://leetcode.com/problems/my-calendar-iii/,hard;binary-search;design;segment-tree;ordered-set;leetcode;set
tweet-counts-per-frequency,leetcode\set\tweet-counts-per-frequency.cpp,https://leetcode.com/problems/tweet-counts-per-frequency/,medium;hash-table;binary-search;design;sorting;ordered-set;leetcode;set
apply-discount-to-prices,leetcode\string\apply-discount-to-prices.cpp,https://leetcode.com/problems/apply-discount-to-prices/,medium;string;leetcode;string
bulls-and-cows,leetcode\string\bulls-and-cows.cpp,https://leetcode.com/problems/bulls-and-cows/,medium;hash-table;string;counting;leetcode;string
check-if-two-string-arrays-are-equivalent,leetcode\string\check-if-two-string-arrays-are-equivalent.cpp,https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent/,easy;array;string;leetcode;string
count-asterisks,leetcode\string\count-asterisks.cpp,https://leetcode.com/problems/count-asterisks/,easy;string;leetcode;string
goat-latin,leetcode\string\goat-latin.cpp,https://leetcode.com/problems/goat-latin/,easy;string;leetcode;string
html-entity-parser,leetcode\string\html-entity-parser.cpp,https://leetcode.com/problems/html-entity-parser/,medium;hash-table;string;leetcode;string
largest-substring-between-two-equal-characters,leetcode\string\largest-substring-between-two-equal-characters.cpp,https://leetcode.com/problems/largest-substring-between-two-equal-characters/,easy;hash-table;string;leetcode;string
longest-ideal-subsequence,leetcode\string\longest-ideal-subsequence.cpp,https://leetcode.com/problems/longest-ideal-subsequence/,medium;hash-table;string;dynamic-programming;leetcode;string
longest-uncommon-subsequence-i,leetcode\string\longest-uncommon-subsequence-i.cpp,https://leetcode.com/problems/longest-uncommon-subsequence-i/,easy;string;leetcode;string
maximum-number-of-words-found-in-sentences,leetcode\string\maximum-number-of-words-found-in-sentences.cpp,https://leetcode.com/problems/maximum-number-of-words-found-in-sentences/,easy;array;string;leetcode;string
minimum-amount-of-time-to-collect-garbage,leetcode\string\minimum-amount-of-time-to-collect-garbage.cpp,https://leetcode.com/problems/minimum-amount-of-time-to-collect-garbage/,medium;array;sorting;prefix-sum;leetcode;string
number-of-days-between-two-dates,leetcode\string\number-of-days-between-two-dates.cpp,https://leetcode.com/problems/number-of-days-between-two-dates/,easy;math;string;leetcode;string
remove-all-adjacent-duplicates-in-string,leetcode\string\remove-all-adjacent-duplicates-in-string.cpp,https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/,easy;string;stack;leetcode;string
remove-colored-pieces-if-both-neighbors-are-the-same-color,leetcode\string\remove-colored-pieces-if-both-neighbors-are-the-same-color.cpp,https://leetcode.com/problems/remove-colored-pieces-if-both-neighbors-are-the-same-color/,medium;math;string;greedy;game-theory;leetcode;string
repeated-substring-pattern,leetcode\string\repeated-substring-pattern.cpp,https://leetcode.com/problems/repeated-substring-pattern/,easy;string;string-matching;leetcode;string
shuffle-string,leetcode\string\shuffle-string.cpp,https://leetcode.com/problems/shuffle-string/,easy;array;string;leetcode;string
splitting-a-string-into-descending-consecutive-values,leetcode\string\splitting-a-string-into-descending-consecutive-values.cpp,https://leetcode.com/problems/splitting-a-string-into-descending-consecutive-values/,medium;string;backtracking;leetcode;string
string-compression,leetcode\string\string-compression.cpp,https://leetcode.com/problems/string-compression/,medium;two-pointers;string;leetcode;string
101_symmetric_tree,leetcode\tree\101_symmetric_tree.cpp,https://leetcode.com/problems/symmetric-tree/,easy;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
102_binary_tree_level_order_traversal,leetcode\tree\102_binary_tree_level_order_traversal.cpp,https://leetcode.com/problems/binary-tree-level-order-traversal/,medium;tree;breadth-first-search;binary-tree;leetcode;tree
104_maximum_depth_of_binary_tree,leetcode\tree\104_maximum_depth_of_binary_tree.cpp,https://leetcode.com/problems/maximum-depth-of-binary-tree/,easy;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
105_binary-tree-from-preorder-and-inorder-traversal,leetcode\tree\105_binary-tree-from-preorder-and-inorder-traversal.cpp,https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/,medium;array;hash-table;divide-and-conquer;tree;binary-tree;leetcode;tree
106_binary-tree-from-inorder-and-postorder-traversal,leetcode\tree\106_binary-tree-from-inorder-and-postorder-traversal.cpp,https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/,medium;array;hash-table;divide-and-conquer;tree;binary-tree;leetcode;tree
112_path_sum,leetcode\tree\112_path_sum.cpp,https://leetcode.com/problems/path-sum/,easy;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
144_binary_tree_preorder_traversal,leetcode\tree\144_binary_tree_preorder_traversal.cpp,https://leetcode.com/problems/binary-tree-preorder-traversal/,easy;stack;tree;depth-first-search;binary-tree;leetcode;tree
145_binary_tree_postorder_traversal,leetcode\tree\145_binary_tree_postorder_traversal.cpp,https://leetcode.com/problems/binary-tree-postorder-traversal/,easy;stack;tree;depth-first-search;binary-tree;leetcode;tree
199_serialize_binary_tree,leetcode\tree\199_serialize_binary_tree.cpp,https://leetcode.com/problems/serialize-and-deserialize-binary-tree/,string;depth-first-search;breadth-first-search;design;binary-tree;hard;leetcode;tree
94_binary_tree_inorder_traversal,leetcode\tree\94_binary_tree_inorder_traversal.cpp,https://leetcode.com/problems/binary-tree-inorder-traversal/,easy;stack;tree;depth-first-search;binary-tree;leetcode;tree
add-one-row-to-tree,leetcode\tree\add-one-row-to-tree.cpp,https://leetcode.com/problems/add-one-row-to-tree/,medium;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
all-elements-in-two-binary-search-trees,leetcode\tree\all-elements-in-two-binary-search-trees.cpp,https://leetcode.com/problems/all-elements-in-two-binary-search-trees/,medium;tree;depth-first-search;binary-search-tree;sorting;binary-tree;leetcode;tree
binary-search-tree-iterator,leetcode\tree\binary-search-tree-iterator.cpp,https://leetcode.com/problems/binary-search-tree-iterator/,medium;stack;tree;design;binary-search-tree;binary-tree;iterator;leetcode;tree
binary-tree-maximum-path-sum,leetcode\tree\binary-tree-maximum-path-sum.cpp,https://leetcode.com/problems/binary-tree-maximum-path-sum/,hard;dynamic-programming;tree;depth-first-search;binary-tree;leetcode;tree
binary-tree-pruning,leetcode\tree\binary-tree-pruning.cpp,https://leetcode.com/problems/binary-tree-pruning/,medium;tree;depth-first-search;binary-tree;leetcode;tree
binary-tree-right-side-view,leetcode\tree\binary-tree-right-side-view.cpp,https://leetcode.com/problems/binary-tree-right-side-view/,medium;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
convert-bst-to-greater-tree,leetcode\tree\convert-bst-to-greater-tree.cpp,https://leetcode.com/problems/convert-bst-to-greater-tree/,medium;tree;depth-first-search;binary-search-tree;binary-tree;leetcode;tree
convert-sorted-array-to-binary-search-tree,leetcode\tree\convert-sorted-array-to-binary-search-tree.cpp,https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/,easy;array;divide-and-conquer;tree;binary-search-tree;binary-tree;leetcode;tree
convert-sorted-list-to-binary-search-tree,leetcode\tree\convert-sorted-list-to-binary-search-tree.cpp,https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/,medium;linked-list;divide-and-conquer;tree;binary-search-tree;binary-tree;leetcode;tree
count-good-nodes-in-binary-tree,leetcode\tree\count-good-nodes-in-binary-tree.cpp,https://leetcode.com/problems/count-good-nodes-in-binary-tree/,medium;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
cousins-in-binary-tree,leetcode\tree\cousins-in-binary-tree.cpp,https://leetcode.com/problems/cousins-in-binary-tree/,easy;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
create-binary-tree-from-descriptions,leetcode\tree\create-binary-tree-from-descriptions.cpp,https://leetcode.com/problems/create-binary-tree-from-descriptions/,medium;array;hash-table;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
delete-leaves-with-a-given-value,leetcode\tree\delete-leaves-with-a-given-value.cpp,https://leetcode.com/problems/delete-leaves-with-a-given-value/,medium;tree;depth-first-search;binary-tree;leetcode;tree
diameter-of-binary-tree,leetcode\tree\diameter-of-binary-tree.cpp,https://leetcode.com/problems/diameter-of-binary-tree/,easy;tree;depth-first-search;binary-tree;leetcode;tree
even-odd-tree,leetcode\tree\even-odd-tree.cpp,https://leetcode.com/problems/even-odd-tree/,medium;tree;breadth-first-search;binary-tree;leetcode;tree
find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree,leetcode\tree\find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree.cpp,https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/,easy;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
find-mode-in-binary-search-tree,leetcode\tree\find-mode-in-binary-search-tree.cpp,https://leetcode.com/problems/find-mode-in-binary-search-tree/,easy;tree;depth-first-search;binary-search-tree;binary-tree;leetcode;tree
flatten-binary-tree-to-linked-list,leetcode\tree\flatten-binary-tree-to-linked-list.cpp,https://leetcode.com/problems/flatten-binary-tree-to-linked-list/,medium;linked-list;stack;tree;depth-first-search;binary-tree;leetcode;tree
flatten-nested-list-iterator,leetcode\tree\flatten-nested-list-iterator.cpp,https://leetcode.com/problems/flatten-nested-list-iterator/,medium;stack;depth-first-search;design;queue;iterator;leetcode;tree
house-robber-iii,leetcode\tree\house-robber-iii.cpp,https://leetcode.com/problems/house-robber-iii/,medium;dynamic-programming;tree;depth-first-search;binary-tree;leetcode;tree
insert-into-a-binary-search-tree,leetcode\tree\insert-into-a-binary-search-tree.cpp,https://leetcode.com/problems/insert-into-a-binary-search-tree/,medium;tree;binary-search-tree;binary-tree;leetcode;tree
insufficient-nodes-in-root-to-leaf-paths,leetcode\tree\insufficient-nodes-in-root-to-leaf-paths.cpp,https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths/,medium;tree;depth-first-search;binary-tree;leetcode;tree
invert-binary-tree,leetcode\tree\invert-binary-tree.cpp,https://leetcode.com/problems/invert-binary-tree/,easy;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
kth-largest-element-in-a-stream,leetcode\tree\kth-largest-element-in-a-stream.cpp,https://leetcode.com/problems/kth-largest-element-in-a-stream/,easy;tree;design;binary-search-tree;priority-queue;binary-tree;data-stream;leetcode;tree
kth-smallest-element-in-a-bst,leetcode\tree\kth-smallest-element-in-a-bst.cpp,https://leetcode.com/problems/kth-smallest-element-in-a-bst/,medium;tree;depth-first-search;binary-search-tree;binary-tree;leetcode;tree
largest-number-after-digit-swaps-by-parity,leetcode\tree\largest-number-after-digit-swaps-by-parity.cpp,https://leetcode.com/problems/largest-number-after-digit-swaps-by-parity/,easy;sorting;priority-queue;leetcode;tree
leaf-similar-trees,leetcode\tree\leaf-similar-trees.cpp,https://leetcode.com/problems/leaf-similar-trees/,easy;tree;depth-first-search;binary-tree;leetcode;tree
longest-path-with-different-adjacent-characters,leetcode\tree\longest-path-with-different-adjacent-characters.cpp,https://leetcode.com/problems/longest-path-with-different-adjacent-characters/,hard;array;string;tree;depth-first-search;graph;topological-sort;leetcode;tree
longest-univalue-path,leetcode\tree\longest-univalue-path.cpp,https://leetcode.com/problems/longest-univalue-path/,medium;tree;depth-first-search;binary-tree;leetcode;tree
lowest-common-ancestor-of-deepest-leaves,leetcode\tree\lowest-common-ancestor-of-deepest-leaves.cpp,https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/,medium;hash-table;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
maximum-binary-tree-ii,leetcode\tree\maximum-binary-tree-ii.cpp,https://leetcode.com/problems/maximum-binary-tree-ii/,medium;tree;binary-tree;leetcode;tree
maximum-difference-between-node-and-ancestor,leetcode\tree\maximum-difference-between-node-and-ancestor.cpp,https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/,medium;tree;depth-first-search;binary-tree;leetcode;tree
maximum-level-sum-of-a-binary-tree,leetcode\tree\maximum-level-sum-of-a-binary-tree.cpp,https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/,medium;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
merge-two-binary-trees,leetcode\tree\merge-two-binary-trees.cpp,https://leetcode.com/problems/merge-two-binary-trees/,easy;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
most-frequent-subtree-sum,leetcode\tree\most-frequent-subtree-sum.cpp,https://leetcode.com/problems/most-frequent-subtree-sum/,medium;hash-table;depth-first-search;tree;binary-tree;leetcode;tree
number-of-good-leaf-nodes-pairs,leetcode\tree\number-of-good-leaf-nodes-pairs.cpp,https://leetcode.com/problems/number-of-good-leaf-nodes-pairs/,depth-first-search;breadth-first-search;medium;tree;leetcode;tree
operations-on-tree,leetcode\tree\operations-on-tree.cpp,https://leetcode.com/problems/operations-on-tree/,medium;hash-table;depth-first-search;tree;design;breadth-first-search;leetcode;tree
print-binary-tree,leetcode\tree\print-binary-tree.cpp,https://leetcode.com/problems/print-binary-tree/,medium;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
same-tree,leetcode\tree\same-tree.cpp,https://leetcode.com/problems/same-tree/,easy;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
search-in-a-binary-search-tree,leetcode\tree\search-in-a-binary-search-tree.cpp,https://leetcode.com/problems/search-in-a-binary-search-tree/,easy;tree;binary-search-tree;binary-tree;leetcode;tree
serialize-and-deserialize-bst,leetcode\tree\serialize-and-deserialize-bst.cpp,https://leetcode.com/problems/serialize-and-deserialize-bst/,medium;string;tree;depth-first-search;breadth-first-search;design;binary-search-tree;binary-tree;leetcode;tree
smallest-string-starting-from-leaf,leetcode\tree\smallest-string-starting-from-leaf.cpp,https://leetcode.com/problems/smallest-string-starting-from-leaf/,medium;string;tree;depth-first-search;binary-tree;leetcode;tree
smallest-subtree-with-all-the-deepest-nodes,leetcode\tree\smallest-subtree-with-all-the-deepest-nodes.cpp,https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/,medium;hash-table;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
step-by-step-directions-from-a-binary-tree-node-to-another,leetcode\tree\step-by-step-directions-from-a-binary-tree-node-to-another.cpp,https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another/,medium;string;tree;depth-first-search;binary-tree;leetcode;tree
subtree-of-another-tree,leetcode\tree\subtree-of-another-tree.cpp,https://leetcode.com/problems/subtree-of-another-tree/,easy;tree;depth-first-search;string-matching;binary-tree;hash-function;leetcode;tree
sum-root-to-leaf-numbers,leetcode\tree\sum-root-to-leaf-numbers.cpp,https://leetcode.com/problems/sum-root-to-leaf-numbers/,medium;tree;depth-first-search;binary-tree;leetcode;tree
throne-inheritance,leetcode\tree\throne-inheritance.cpp,https://leetcode.com/problems/throne-inheritance/,medium;hash-table;tree;depth-first-search;design;leetcode;tree
trim-a-binary-search-tree,leetcode\tree\trim-a-binary-search-tree.cpp,https://leetcode.com/problems/trim-a-binary-search-tree/,medium;tree;depth-first-search;binary-search-tree;binary-tree;leetcode;tree
two-sum-iv-input-is-a-bst,leetcode\tree\two-sum-iv-input-is-a-bst.cpp,https://leetcode.com/problems/two-sum-iv-input-is-a-bst/,easy;hash-table;two-pointers;tree;depth-first-search;breadth-first-search;binary-search-tree;binary-tree;leetcode;tree
unique-binary-search-trees-ii,leetcode\tree\unique-binary-search-trees-ii.cpp,https://leetcode.com/problems/unique-binary-search-trees-ii/,medium;dynamic-programming;backtracking;tree;binary-search-tree;binary-tree;leetcode;tree
unique-binary-search-trees,leetcode\tree\unique-binary-search-trees.cpp,https://leetcode.com/problems/unique-binary-search-trees/,medium;math;dynamic-programming;tree;binary-search-tree;leetcode;tree
vertical-order-traversal-of-a-binary-tree,leetcode\tree\vertical-order-traversal-of-a-binary-tree.cpp,https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/,hard;hash-table;tree;depth-first-search;breadth-first-search;binary-tree;leetcode;tree
